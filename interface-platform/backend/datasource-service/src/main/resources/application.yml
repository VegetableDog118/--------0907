# 数据源服务配置文件
# DataSource Service Configuration

# XML映射文件已迁移到MyBatis-Plus方式，不再需要mapper-locations配置
# mapper-locations: classpath*:mapper/*.xml

spring:
  application:
    name: datasource-service
  
  # 数据库配置
  datasource:
    # 主数据源配置（用于存储数据源配置信息）
    url: jdbc:h2:mem:datasource_config;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE
    username: sa
    password: 
    driver-class-name: org.h2.Driver
    
    # HikariCP连接池配置
    hikari:
      pool-name: DataSourceConfigPool
      maximum-pool-size: 10
      minimum-idle: 2
      connection-timeout: 30000
      idle-timeout: 600000
      max-lifetime: 1800000
      connection-test-query: SELECT 1
      validation-timeout: 5000
      leak-detection-threshold: 60000
      auto-commit: true
      read-only: false
      transaction-isolation: TRANSACTION_READ_COMMITTED
  
  # JPA配置
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: false
    properties:
      hibernate:
        dialect: org.hibernate.dialect.H2Dialect
        format_sql: true
        use_sql_comments: true
        jdbc:
          batch_size: 20
        order_inserts: true
        order_updates: true
    open-in-view: false
  
  # 缓存配置
  cache:
    type: caffeine
    caffeine:
      spec: maximumSize=1000,expireAfterWrite=1h,recordStats
    cache-names:
      - queryResults
      - tableMetadata
      - tableNames
      - connectionPools
  
  # Redis配置
  redis:
    host: localhost
    port: 6379
    password: 
    database: 0
    timeout: 2000ms
    lettuce:
      pool:
        max-active: 8
        max-idle: 8
        min-idle: 0
        max-wait: -1ms
  
  # 异步配置
  task:
    execution:
      pool:
        core-size: 5
        max-size: 20
        queue-capacity: 100
        keep-alive: 60s
      thread-name-prefix: datasource-async-
    scheduling:
      pool:
        size: 5
      thread-name-prefix: datasource-scheduler-

# 服务器配置
server:
  port: 8088
  servlet:
    context-path: /datasource-service
  compression:
    enabled: true
    mime-types: application/json,application/xml,text/html,text/xml,text/plain
  tomcat:
    max-threads: 200
    min-spare-threads: 10
    connection-timeout: 20000
    accept-count: 100

# 管理端点配置
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus,datasources,cache
      base-path: /actuator
  endpoint:
    health:
      show-details: always
      show-components: always
    metrics:
      enabled: true
  metrics:
    export:
      prometheus:
        enabled: true
    distribution:
      percentiles-histogram:
        http.server.requests: true
      percentiles:
        http.server.requests: 0.5,0.9,0.95,0.99
  health:
    datasource:
      enabled: true
    diskspace:
      enabled: true

# 应用程序信息
info:
  app:
    name: DataSource Service
    description: 多数据源连接管理和查询执行服务
    version: 1.0.0
    author: PowerTrading Team
  build:
    artifact: datasource-service
    group: com.powertrading

# 数据源服务自定义配置
datasource:
  # 连接池默认配置
  pool:
    default:
      maximum-pool-size: 10
      minimum-idle: 2
      connection-timeout: 30000
      idle-timeout: 600000
      max-lifetime: 1800000
      validation-timeout: 5000
      leak-detection-threshold: 60000
  
  # 查询配置
  query:
    timeout: 30000
    max-rows: 10000
    fetch-size: 1000
    slow-query-threshold: 1000
  
  # 监控配置
  monitor:
    health-check-interval: 60000
    connection-timeout: 5000
    alert-threshold: 5
    metrics-retention-days: 30
  
  # 缓存配置
  cache:
    query-result:
      enabled: true
      ttl: 3600
      max-size: 1000
    table-metadata:
      enabled: true
      ttl: 7200
      max-size: 500
    table-names:
      enabled: true
      ttl: 3600
      max-size: 100
  
  # 安全配置
  security:
    sql-injection-check: true
    dangerous-keywords:
      - DROP
      - DELETE
      - TRUNCATE
      - ALTER
      - CREATE
      - INSERT
      - UPDATE
    allowed-query-types:
      - SELECT
    allowed-update-types:
      - UPDATE
      - INSERT

# 日志配置
logging:
  level:
    com.powertrading.datasource: INFO
    org.springframework.cache: DEBUG
    com.zaxxer.hikari: INFO
    org.hibernate.SQL: DEBUG
    org.hibernate.type.descriptor.sql.BasicBinder: TRACE
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n"
    file: "%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n"
  file:
    name: logs/datasource-service.log
    max-size: 100MB
    max-history: 30

---
# 开发环境配置
spring:
  config:
    activate:
      on-profile: dev
  
  datasource:
    url: jdbc:h2:mem:datasource_dev;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE
    username: sa
    password: 
  
  jpa:
    show-sql: true
    hibernate:
      ddl-auto: create-drop

logging:
  level:
    com.powertrading.datasource: DEBUG
    org.springframework: DEBUG

---
# 测试环境配置
spring:
  config:
    activate:
      on-profile: test
  
  datasource:
    url: jdbc:h2:mem:datasource_test;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE
    username: sa
    password: 
  
  jpa:
    hibernate:
      ddl-auto: create-drop
    show-sql: false

logging:
  level:
    com.powertrading.datasource: WARN
    org.springframework: WARN

---
# 生产环境配置
spring:
  config:
    activate:
      on-profile: prod
  
  datasource:
    url: ${DATABASE_URL:jdbc:mysql://localhost:3306/datasource_config}
    username: ${DATABASE_USERNAME:datasource_user}
    password: ${DATABASE_PASSWORD:datasource_password}
    driver-class-name: com.mysql.cj.jdbc.Driver
    
    hikari:
      maximum-pool-size: 20
      minimum-idle: 5
      connection-timeout: 30000
      idle-timeout: 600000
      max-lifetime: 1800000
  
  jpa:
    hibernate:
      ddl-auto: validate
    show-sql: false

server:
  port: ${SERVER_PORT:8082}

logging:
  level:
    com.powertrading.datasource: INFO
    org.springframework: WARN
  file:
    name: /var/log/datasource-service/application.log

datasource:
  monitor:
    health-check-interval: 30000
    alert-threshold: 3
  cache:
    query-result:
      ttl: 1